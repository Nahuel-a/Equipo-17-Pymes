"""add roles for user

Revision ID: 9087a88029a2
Revises: a3a4b524fb64
Create Date: 2025-10-10 10:31:33.391541

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '9087a88029a2'
down_revision: Union[str, Sequence[str], None] = 'a3a4b524fb64'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

role_enum = sa.Enum('USER', 'ADMIN', 'SUPERADMIN', name='role_enum')


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    role_enum.create(op.get_bind(), checkfirst=True)

    op.add_column('users', sa.Column('role', role_enum, nullable=False, server_default='USER'))
    op.add_column(
        'users',
        sa.Column('id_new', postgresql.UUID(as_uuid=True), nullable=True, server_default=sa.text('gen_random_uuid()'))
    )
    op.drop_constraint('users_pkey', 'users', type_='primary')
    op.drop_column('users', 'id')

    op.alter_column('users', 'id_new', new_column_name='id', nullable=False)
    op.create_primary_key('users_pkey', 'users', ['id'])
    # ### end Alembic commands ###

def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('is_superuser', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.alter_column('users', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_column('users', 'role')
    # ### end Alembic commands ###
